{"version":3,"sources":["SeasonDisplay.js","Loader.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","spring","autumn","getSeason","lat","month","SeasonDisplay","props","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Loader","message","defaultProps","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","err","_this2","window","navigator","geolocation","getCurrentPosition","position","latitude","coords","setState","src_SeasonDisplay_0","src_Loader","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAgBQA,SAAe,CACnBC,OAAQ,CACNC,KAAM,iEACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,iGACNC,SAAU,aAEZE,OAAQ,CACJH,KAAM,wCACNC,SAAU,aAEdG,OAAQ,CACJJ,KAAM,+BACNC,SAAU,UAQZI,EAAY,SAACC,EAAKC,GACtB,OAAGA,GAAO,GAAKA,GAAO,EACbD,EAAM,EAAI,SAAW,SACpBC,GAAO,GAAKA,GAAO,EACpBD,EAAM,EAAI,SAAW,SACpBC,GAAO,GAAKA,GAAO,GACpBD,EAAM,EAAI,SAAW,SACZ,KAARC,GAAwB,IAAVA,GAAyB,IAAVA,EAC9BD,EAAM,EAAI,SAAW,cADvB,GA4BME,EAvEO,SAAAC,GACpB,IAAMC,EAASL,EAAUI,EAAMH,KAAK,IAAIK,MAAOC,YADlBC,EAEFf,EAAaY,GAAhCV,EAFqBa,EAErBb,KAAMC,EAFeY,EAEfZ,SAEd,OACEa,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAChCI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBjB,EAAvB,WACZa,EAAAC,EAAAC,cAAA,UAAKhB,GACLc,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBjB,EAAxB,aCTZkB,EAAS,SAACV,GACd,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZR,EAAMW,WAMfD,EAAOE,aAAe,CACpBD,QAAS,cAGID,QCXTG,cACJ,SAAAA,EAAYb,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMjB,KAEDqB,MAAQ,CACXxB,IAAK,KACLyB,IAAK,IALUR,mFASC,IAAAS,EAAAN,KAClBO,OAAOC,UAAUC,YAAYC,mBAC3B,SAACC,GACC,IAAMC,EAAWD,EAASE,OAAOD,SACjCN,EAAKQ,SAAS,CACZlC,IAAKgC,KAGT,SAACP,GACCC,EAAKQ,SAAS,CACZT,IAAKA,EAAIX,oDAOf,OAAGM,KAAKI,MAAMC,MAAQL,KAAKI,MAAMxB,IACxBQ,EAAAC,EAAAC,cAAA,qBAAaU,KAAKI,MAAMC,MAG7BL,KAAKI,MAAMC,KAAOL,KAAKI,MAAMxB,IACxBQ,EAAAC,EAAAC,cAACyB,EAAD,CAAenC,IAAKoB,KAAKI,MAAMxB,MAGjCQ,EAAAC,EAAAC,cAAC0B,EAAD,CAAQtB,QAAQ,oEAIvB,OAAON,EAAAC,EAAAC,cAAA,WACJU,KAAKiB,wBAxCMC,IAAMC,WA8CxBC,IAASC,OACPjC,EAAAC,EAAAC,cAACgC,EAAD,MACAC,SAASC,cAAc","file":"static/js/main.99043d56.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css';\r\n\r\nconst SeasonDisplay = props => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\n  const seasonConfig = {\r\n    summer: {\r\n      text: \"Ah, summer, what power you have to make us suffer and like it.\",\r\n      iconName: \"sun\"\r\n    },\r\n    winter: {\r\n      text: \"Welcome, winter. Your late dawns and chilled breath make me lazy, but I love you nonetheless. \",\r\n      iconName: \"snowflake\"\r\n    },\r\n    spring: {\r\n        text: \"Springtime! No winter last forever :)\",\r\n        iconName: \"pagelines\", \r\n    },\r\n    autumn: {\r\n        text: \" Autumn. Season of the Soul!\",\r\n        iconName: \"leaf\"\r\n    }\r\n  \r\n  };\r\n\r\n// Code to see season for current season diplay \r\n// in Northern Hemisphere & Southern Hemisphere. \r\n\r\nconst getSeason = (lat, month) => {\r\n  if(month>=2 && month<=4) {\r\n    return lat > 0 ? 'spring' : 'autumn';\r\n  } else if(month>=5 && month<=7) {\r\n    return lat > 0 ? 'summer' : 'winter';\r\n  } else if(month>=8 && month<=10) {\r\n    return lat > 0 ? 'autumn' : 'spring';\r\n  } else if(month===11 || month === 0 || month === 1) {\r\n    return lat > 0 ? 'winter' : 'summer';\r\n  }\r\n}\r\n\r\n// Code to see Summer & Winter dispaly in Northern Hemisphere & \r\n// Southern Hemisphere. \r\n\r\n// const getSeason = (lat, month) => {\r\n//     if (month > 2 && month < 9) {\r\n//       return lat > 0 ? \"summer\" : \"winter\";\r\n//     } else {\r\n//       return lat > 0 ? \"winter\" : \"summer\";\r\n//     } \r\n//   };\r\n\r\n// Code to see Autumn display in Northern Hemisphere & \r\n// Southern Hemisphere.  \r\n\r\n// const getSeason = (lat, month) => {\r\n//     if (month > 2 && month < 9) {\r\n//       return lat > 0 ? \"autumn\" : \"spring\";\r\n//     } else {\r\n//       return lat > 0 ? \"spring\" : \"autumn\";\r\n//     } \r\n//   };\r\n\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Loader = (props) => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">\r\n        {props.message}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.defaultProps = {\r\n  message: 'Loading...'\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Loader from './Loader';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      lat: null,\r\n      err: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {    \r\n    window.navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const latitude = position.coords.latitude;\r\n        this.setState({\r\n          lat: latitude\r\n        });\r\n      },\r\n      (err) => {\r\n        this.setState({\r\n          err: err.message\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  renderContent() {\r\n    if(this.state.err && !this.state.lat) {\r\n      return <div>Error: {this.state.err}</div>;\r\n    }\r\n\r\n    if(!this.state.err && this.state.lat) {\r\n      return <SeasonDisplay lat={this.state.lat} />;\r\n    }\r\n\r\n    return <Loader message=\"Please accept location request\" />\r\n  }\r\n\r\n  render() {\r\n    return <div>\r\n      {this.renderContent()}\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root')\r\n)"],"sourceRoot":""}